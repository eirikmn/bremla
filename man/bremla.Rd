% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bremla.R
\name{bremla}
\alias{bremla}
\title{Bayesian regression modeling of layered archives}
\usage{
bremla(
  formula,
  data,
  reference.label = NULL,
  nsims = 10000,
  events = NULL,
  synchronization = NULL,
  control.fit = NULL,
  control.sim = NULL,
  control.linramp = NULL,
  control.transition_dating = NULL,
  control.bias = NULL,
  print.progress = FALSE
)
}
\arguments{
\item{formula}{formula describing the predictor used in fitting the data. Partial covariates (psi)
can be filled in by specifying the degree and events in \code{events} argument.}

\item{data}{data.frame containing response and covariates. Must include 'age' and 'depth'.
The first row is used for initializing 'age' and 'depth', hence the rest can be set to NA.
Covariates related to the events (psi) can be filled in automatically by specifying the degree and events in \code{events} argument.}

\item{reference.label}{Character label of reference timescale. Used in \code{\link{plot},\link{summary}}.}

\item{nsims}{Number of chronologies to be simulated.}

\item{events}{List object describing locations, degree and other informations about
the specific climatic periods used in the predictor. If used must include at least
\code{events\$locations}. See \code{\link{events.default}} for more details.}

\item{synchronization}{List containing locations and details for sampling tie-points used to synchronize our time scale.}

\item{control.fit}{List containing specifications for the fitting procedure.
See \code{\link{control.fit.default}} for more details.}

\item{control.sim}{List containing specifications for sampling chronologies (synchronous or otherwise).
See \code{\link{control.sim.default}} for more details.}

\item{control.linramp}{List containing specifications for fitting a linear ramp model to given data.
If used, must include \code{control.linramp\$proxy} and \code{control.linramp\$interval}. See
\code{\link{control.linramp.default}} for details.}

\item{control.transition_dating}{List containing specifications for
estimating a given transition. See \code{\link{control.transition_dating.default}} for more details.}

\item{control.bias}{List containing specifications for adding a potential unknown stochastic counting bias.
See \code{\link{control.bias.default}} for more details.}

\item{print.progress}{Boolean. If \code{TRUE} progress will be printed to screen}
}
\value{
Returns an S3 object of class "bremla". This includes output from all functions nested within the bremla function. Including fitted marginals and summary statistics, simulated chronologies, time spent on each step.
}
\description{
Fits a regression model to the data and produces chronology simulations.
}
\examples{
\donttest{
## Simulation example
require(stats)
set.seed(1)
n <- 1000
phi <- 0.8
sigma <- 1.2
a_lintrend <- 0.3; a_proxy = 0.8
dy_noise <- as.numeric(arima.sim(model=list(ar=c(phi)),n=n,sd=sqrt(1-phi^2)))
lintrend <- seq(from=10,to=15,length.out=n)

proxy <- as.numeric(arima.sim(model=list(ar=c(0.9)),n=n,sd=sqrt(1-0.9^2)))
dy <- a_lintrend*lintrend + a_proxy*proxy + sigma*dy_noise

y0 = 11700;z0=1200
age = y0+cumsum(dy)
depth = 1200 + 1:n*0.05


formula = dy~-1+depth2 + proxy
data = data.frame(age=age,dy=dy,proxy=proxy,depth=depth,depth2=depth^2)
data = rbind(c(y0,NA,NA,z0,NA),data) #First row is only used to extract y0 and z0.

events=list(locations=c(1210,1220,1240))
control.fit = list(ncores=2,noise="ar1")
synchronization=list(locations=depth[c(100,400,700)],locations_unit="depth",method="gauss",
        params=list(mean=age[c(100,400,700)]+c(20,5,-20),sd=c(20,10,50)))
control.sim=list(synchronized=2,
                 summary=list(compute=TRUE))

#simulate transition:
prox = rnorm(n,mean=c(rep(0,400),seq(0,4,length.out=20),rep(4,580)),sd=1)
window = 330:500
control.linramp = list(label="Simulated",proxy=prox,interval=window,interval.unit="index",
    depth.ref=depth[401])
control.transition_dating=list(label="Simulated transition",dating=list(age.ref=age[401]))


object = bremla(formula,data,nsims=5000,reference.label="simulated timescale",
                         events=events,
                         synchronization=synchronization,
                         control.fit=control.fit,
                         control.sim=control.sim,
                         control.linramp=control.linramp,
                         control.transition_dating=control.transition_dating,
                         print.progress=TRUE)
summary(object)
plot(object)



### Real data example ###
require(stringr)
data("event_intervals")
data("events_rasmussen")
data("NGRIP_5cm")


age = NGRIP_5cm$age
depth = NGRIP_5cm$depth
d18O = NGRIP_5cm$d18O
proxy=d18O
data = data.frame(age=age,dy=c(NA,diff(age)),depth=depth,depth2=depth^2,proxy=proxy)
formula = dy~-1+depth2


lowerints = which.index(event_intervals$depth_int_lower.m, depth[2:length(depth)])
upperints = which.index(event_intervals$depth_int_upper.m, depth[2:length(depth)])

eventnumber=13 #number between 1 and 29. specifies which transition to consider
transitionlabel = str_sub(event_intervals$onsetlabel[eventnumber],
                      str_locate(event_intervals$onsetlabel[eventnumber],"GI")[1])
depth.reference = event_intervals$NGRIP_depth_m[eventnumber]
age.reference = event_intervals$GICC_age.yb2k[eventnumber]
interval = lowerints[eventnumber]:upperints[eventnumber]

nsims=5000
events=list(locations = events_rasmussen$depth,
            locations_unit="depth",degree=1)
synchronization = list(method="adolphi")
control.fit=list(method="inla")
control.sim=list(synchronized = 2)

control.linramp=list(proxy=proxy,interval=interval,interval.unit="index",
                     depth.reference=depth.reference,
                     label=transitionlabel,depth.label="d18O (permil)")
control.transition_dating=list(age.ref=age.reference,age.label="years (yb2k)")
object = bremla(formula,data,reference.label="GICC05",
                   nsims=nsims,
                   events=events,
                   synchronization=synchronization,
                   control.fit=control.fit,
                   control.sim=control.sim,
                   control.linramp=control.linramp,
                   control.transition_dating=control.transition_dating,
                   print.progress=TRUE )
  summary(object)
  plot(object)
}
}
\seealso{
\code{\link{bremla_modelfitter},\link{bremla_chronology_simulation}}
}
\author{
Eirik Myrvoll-Nilsen, \email{eirikmn91@gmail.com}
}
\keyword{bremla}
